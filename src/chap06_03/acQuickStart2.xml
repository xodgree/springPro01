<!-- 
1.main을 실행시킨다.
2.xml을 확인한다. 
3. acQuickStart2.xml을 읽어내려간다. 
 -->

<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:aop = "http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<!-- Advice로 끝나는거 보니 공통기능 하는 애들을 모아놓은 클래스 구나. 이 아이의 id는 cache다.-->
	<bean id="cache" class="chap06_03.ArticleCacheAdvice"/>
	
	<aop:config>
	<!-- aspect id가 cacheAspect고 ref는 cache다. aspect는 advice랑 pointcut을 합친거라 했다. 
	   ref는 참조니까 cache의 아이디를 참조하는구나. cacheAspect가  -->
		<aop:aspect id="cacheAspect" ref="cache">
		
		<!-- around method가 cache(ArticleCacheAdvice)의 cache라는 메소드이고 pointcut은 ReadArticleService의 모든메소드.
		   즉, pointcut이 들어왔을때 ArticleCachAdivce의 cache메소드를 "앞,뒤"(around)로 실행해라. -->
			<aop:around method="cache" pointcut="execution(public * *..ReadArticleService.*(..))"/>
		</aop:aspect>
	</aop:config>
	
	<!--  ReadArticleServicelmpl클래스의 id를 readArticleService로 줌. -->
	<bean id="readArticleService" class="chap06.board.ReadArticleServiceImpl">
	
	<!-- property 이름은 articleDao고(setArticleDao)의 매개변수는 articleDao임. -->
		<property name="articleDao" ref="articleDao"/>
	</bean>
	
	<!-- MemoryArticleDao 클래스의 id 는 articleDao -->
	<bean id="articleDao" class="chap06.board.MemoryArticleDao"/>
</beans>